<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://sstapnode.github.io/news/article-24059.htm" />
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>C\C++ 中 malloc、calloc、realloc 函数的用法</title>
        <meta name="description" content="转自：https://www.jianshu.com/p/d6f209b8796d 前言 C\C++提供了底层的内存操作，为程序提供了强大的能力。在使用malloc() calloc() reallo" />
        <link rel="icon" href="/assets/website/img/sstapnode/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="/assets/website/css/sstapnode/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/sstapnode/all-fontawesome.min.css">
    <link rel="stylesheet" href="/assets/website/css/sstapnode/animate.min.css">
    <link rel="stylesheet" href="/assets/website/css/sstapnode/magnific-popup.min.css">
    <link rel="stylesheet" href="/assets/website/css/sstapnode/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/sstapnode/jquery-ui.min.css">
    <link rel="stylesheet" href="/assets/website/css/sstapnode/jquery.timepicker.min.css">
    <link rel="stylesheet" href="/assets/website/css/sstapnode/nice-select.min.css">
    <link rel="stylesheet" href="/assets/website/css/sstapnode/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-RQLB5BXPJG"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-RQLB5BXPJG');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <div class="preloader">
        <div class="loader-ripple">
            <div></div>
            <div></div>
        </div>
    </div>
    <header class="header">
        <div class="main-navigation">
            <nav class="navbar navbar-expand-lg">
                <div class="container position-relative">
                    <a class="navbar-brand" href="/">
                                                <span>SSTAP Node</span>
                                            </a>
                    <div class="mobile-menu-right">
                        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#main_nav" aria-expanded="false" aria-label="Toggle navigation">
                            <span class="navbar-toggler-mobile-icon"><i class="far fa-bars"></i></span>
                        </button>
                    </div>
                    <div class="collapse navbar-collapse" id="main_nav">
                        <ul class="navbar-nav">
                                                        <li class="nav-item"><a class="nav-link" href="/">首页</a></li>
                                                        <li class="nav-item"><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                                        <li class="nav-item"><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                                        <li class="nav-item"><a class="nav-link" href="/news/">新闻资讯</a></li>
                                                        <li class="nav-item"><a class="nav-link" href="#">关于</a></li>
                            <li class="nav-item"><a class="nav-link" href="#">联系</a></li>
                        </ul>
                    </div>
                </div>
            </nav>
        </div>
    </header>

    <main class="main">
        <div class="site-breadcrumb" style="background: url(/assets/website/img/sstapnode/01.jpg)">
            <div class="container">
                <h1 class="breadcrumb-title">C\C++ 中 malloc、calloc、realloc 函数的用法</h1>
                <ul class="breadcrumb-menu">
                    <li><a href="/">首页</a></li>
                    <li><a href="/news/">新闻资讯</a></li>
                    <li class="active">正文</li>
                </ul>
            </div>
        </div>
        <div class="about-area py-120">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="htmledit_views"> </h1> <p>转自：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.jianshu.com/p/d6f209b8796d"  rel="nofollow">https://www.jianshu.com/p/d6f209b8796d</a></p> <p>前言</p> <p>C\C++提供了底层的内存操作，为程序提供了强大的能力。在使用<code>malloc() calloc() realloc()</code> 进行动态内存分配时，内存区域中的这个空间称为堆(heap)，另一个内存区域，称为栈(stack)，其中的空间分配给函数的参数和本地变量，执行完该函数后，存储参数和本地变量的内存空间就会自</p> <p>动释放。而堆中的内存是由人控制的，在分配堆上的内存时，需要人自己来判断什么时候需要分配，什么时候需要释放。</p> <p><code>malloc</code></p> <ol> <li>函数原型<br /><code>(TYPE *) malloc(SIZE)</code></li> <li>函数功能<br /><code>malloc()</code> 在内存的动态存储区中分配一块长度为<code>SIZE</code> 字节的连续区域。参数<code>SIZE</code> 为需要的内存空间的长度，返回该区域的地址。<code>malloc()</code> 函数不能为所分配的空间初始化值，需要使用<code>memset()</code>，不然可能会出现内存中遗留的数据。在程序结束前，需要使用<code>free()</code> 进行内存释放。</li> <li>使用</li> </ol> <pre class="has"><code>int *p = NULL; p = (int *) malloc(sizeof(int)); // 申请 memset(p, 20, sizeof(int) / 4); // 赋初值（不可取） printf("%d\n", *p); // 20 free(p); // 释放</code></pre> <p>主要注意的是，<code>memset()</code> 是按照字节来进行赋值，而<code>char</code> 类型的空间恰好是1字节，所以<code>memset()</code> 最好用于<code>char</code> 类型的赋值。当然，也可以用<code>sizeof(int) / 4</code> 来给<code>int</code> 类型赋值，只不过只能赋 0x00 - oxff 的值。不然的话就是按位赋值四次。</p> <pre class="has"><code>char *p = NULL; p = (char *) malloc(sizeof(char)); memset(p, 'g', sizeof(char)); printf("%c\n", *p); // g free(p); p = NULL;</code></pre> <p>如上，<code>char</code> 类型可以完美的赋值。</p> <p><code>calloc</code></p> <ol> <li>函数原型<br /><code>(TYPE * )calloc(int n, SIZE);</code></li> <li>函数功能<br /><code>calloc()</code> 函数功能和<code>malloc</code> 类似，都是从堆内存中分配内存，不同的是，<code>calloc()</code> 会自动进行初始化，每一位都初始化为零。<code>n</code> 表示元素的个数，<code>SIZE</code> 为单位元素的长度，从定义上看，<code>calloc()</code> 适合为数组申请动态内存。与<code>malloc()</code> 最后也需要使用<code>free()</code> 进行内存释放。</li> <li>使用</li> </ol> <pre class="has"><code>#define SIZE 10 int *p; p = (int *) calloc(SIZE, sizeof(int)); for (int i = 0; i &lt; SIZE; ++i) {     p[i] = i; } for (int j = 0; j &lt; SIZE; ++j) {     printf("%d\n", p[j]); // 0, 1, 2, 3, 4, 5 ... } free(p); p = NULL;</code></pre> <p><code>realloc</code></p> <ol> <li>函数原型<br /><code>(TYPE * )realloc(TYPE *ptr, NEW_SIZE);</code></li> <li>函数功能<br /><code>realloc()</code> 是给一个已经分配了地址的指针重新分配动态内存空间，<code>*ptr</code> 为原有的空间地址，<code>NEW_SIZE</code> 是重新申请的空间，若新的空间小于之前的空间，则不会进行改变，若新的空间大于原来的空间，则会从堆内存中为<code>*ptr</code> 分配一个大小为<code>NEW_SIZE</code> 的空间吗，同时将原来空间的内容依次复制进新的地址空间，<code>*ptr</code> 之前的空间被释放，<code>realloc()</code> 所分配的空间也是未初始化的。</li> <li>使用</li> </ol> <pre class="has"><code>#define SIZE 10 int *p; p = (int *) calloc(SIZE, sizeof(int)); for (int i = 0; i &lt; SIZE; ++i) {     p[i] = i; } p = (int *) realloc(p, SIZE * 2); for (int j = 10; j &lt; SIZE * 2; ++j) {     p[j] = j; } for (int k = 0; k &lt; SIZE * 2; ++k) {     printf("%d\n", p[k]); // 1, 2, 3, ... , 19 } free(p); p</code></pre> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-23597.htm">宠物粮进货平台有哪些品牌好用（宠物粮市场前景怎么样）</a></p>
                                        <p>下一个：<a href="/news/article-24060.htm">动物疫苗注射注意事项及禁忌有哪些内容（动物疫苗使用时的注意事项）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-28710.htm" title="宠物用品批发进货渠道湖北地区有几个（湖北武汉宠物用品批发）">宠物用品批发进货渠道湖北地区有几个（湖北武汉宠物用品批发）</a></li>
                        <li class="py-2"><a href="/news/article-24456.htm" title="美联众合动物医院加盟电话 美联众合动物医院是加盟吗">美联众合动物医院加盟电话 美联众合动物医院是加盟吗</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-16-free-node-subscribe-links.htm" title="SSTap Node节点订阅每天更新18.7M/S免费节点订阅链接">SSTap Node节点订阅每天更新18.7M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-22-node-share.htm" title="SSTap Node节点订阅每天更新20.6M/S免费节点订阅链接">SSTap Node节点订阅每天更新20.6M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-26855.htm" title="SpringBoot分组校验及自定义校验注解">SpringBoot分组校验及自定义校验注解</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-27-free-node-subscribe.htm" title="SSTap Node节点订阅每天更新22M/S免费节点订阅链接地址分享">SSTap Node节点订阅每天更新22M/S免费节点订阅链接地址分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-18-node-share-links.htm" title="SSTap Node节点订阅每天更新22.5M/S免费节点订阅链接">SSTap Node节点订阅每天更新22.5M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-21-free-node-subscribe-links.htm" title="SSTap Node节点订阅每天更新19M/S免费节点订阅链接">SSTap Node节点订阅每天更新19M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-27781.htm" title="动物医师证报考条件有哪些（动物医生执照的报考条件）">动物医师证报考条件有哪些（动物医生执照的报考条件）</a></li>
                        <li class="py-2"><a href="/news/article-25465.htm" title="动物疫苗的种类及作用有哪些图片及名称（动物疫苗有哪几种）">动物疫苗的种类及作用有哪些图片及名称（动物疫苗有哪几种）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">3</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">26</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
    </main>
        <footer class="footer-area">
        <div class="copyright">
            <div class="container">
                <div class="row">
                    <div class="col-md-6 align-self-center">
                        <p class="copyright-text">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                            <a href="/">SSTap Node免费机场订阅节点官网</a> 版权所有 Powered by WordPress
                        </p>
                    </div>
                    <div class="col-md-6 align-self-center">
                        <ul class="footer-social">
                            <li><a href="#"><i class="fab fa-facebook-f"></i></a></li>
                            <li><a href="#"><i class="fab fa-twitter"></i></a></li>
                            <li><a href="#"><i class="fab fa-linkedin-in"></i></a></li>
                            <li><a href="#"><i class="fab fa-youtube"></i></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <a href="#" id="scroll-top"><i class="far fa-arrow-up"></i></a>
    <script data-cfasync="false" src="/assets/website/js/frontend/sstapnode/email-decode.min.js"></script>
    <script src="/assets/website/js/frontend/sstapnode/jquery-3.6.0.min.js"></script>
    <script src="/assets/website/js/frontend/sstapnode/modernizr.min.js"></script>
    <script src="/assets/website/js/frontend/sstapnode/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/sstapnode/imagesloaded.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/sstapnode/jquery.magnific-popup.min.js"></script>
    <script src="/assets/website/js/frontend/sstapnode/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/sstapnode/jquery.appear.min.js"></script>
    <script src="/assets/website/js/frontend/sstapnode/jquery.easing.min.js"></script>
    <script src="/assets/website/js/frontend/sstapnode/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/sstapnode/counter-up.js"></script>
    <script src="/assets/website/js/frontend/sstapnode/jquery-ui.min.js"></script>
    <script src="/assets/website/js/frontend/sstapnode/jquery.timepicker.min.js"></script>
    <script src="/assets/website/js/frontend/sstapnode/jquery.nice-select.min.js"></script>
    <script src="/assets/website/js/frontend/sstapnode/wow.min.js"></script>
    <script src="/assets/website/js/frontend/sstapnode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>